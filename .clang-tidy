---
Checks:
  "clang-diagnostic-*,clang-analyzer-*,cppcoreguidelines-*,readability-identifier-naming,modernize-*,bugprone-*,
  -cppcoreguidelines-pro-type-vararg,readability-braces-around-statements,readability-function-size,
  -modernize-use-trailing-return-type,google-*,readability-function-cognitive-complexity,
  readability-make-member-function-const,readability-simplify-boolean-expr,readability-implicit-bool-conversion,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,misc-const-correctness,
  misc-new-delete-overloads,misc-unused-*,misc-misplaced-const,-modernize-use-nodiscard,
  -bugprone-exception-escape,-cppcoreguidelines-avoid-magic-numbers,performance-for-range-copy,
  performance-noexcept-move-constructor,performance-move-const-arg,-modernize-avoid-bind,misc-new-delete-overloads,
  misc-throw-by-value-catch-by-reference,readability-inconsistent-declaration-parameter-name,
  -cppcoreguidelines-pro-type-reinterpret-cast,readability-container-*,readability-non-const-parameter,
  readability-suspicious-call-argument,-cppcoreguidelines-pro-bounds-pointer-arithmetic"
WarningsAsErrors: "readability-*,bugprone-*,clang-*"
HeaderFilterRegex: "*"
AnalyzeTemporaryDtors: false
FormatStyle: none
CheckOptions:
  - key: llvm-else-after-return.WarnOnConditionVariables
    value: "false"
  - key: modernize-loop-convert.MinConfidence
    value: reasonable
  - key: modernize-replace-auto-ptr.IncludeStyle
    value: llvm
  - key: cert-str34-c.DiagnoseSignedUnsignedCharComparisons
    value: "false"
  - key: google-readability-namespace-comments.ShortNamespaceLines
    value: "10"
  - key: google-readability-braces-around-statements.ShortStatementLines
    value: "1"
  - key: cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: "true"
  - key: google-readability-namespace-comments.SpacesBeforeComments
    value: "2"
  - key: modernize-loop-convert.MaxCopySize
    value: "16"
  - key: modernize-pass-by-value.IncludeStyle
    value: llvm
  - key: modernize-use-nullptr.NullMacros
    value: "NULL"
  - key: llvm-qualified-auto.AddConstToQualified
    value: "false"
  - key: modernize-loop-convert.NamingStyle
    value: lower_case
  - key: llvm-else-after-return.WarnOnUnfixable
    value: "false"
  - { key: readability-identifier-naming.NamespaceCase, value: lower_case }
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: m_ }
  - { key: readability-identifier-naming.ProtectedMemberPrefix, value: m_ }
  - { key: readability-identifier-naming.ClassMethodCase, value: lower_case }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.FunctionCase, value: lower_case }
  - { key: readability-identifier-naming.VariableCase, value: lower_case }
  - { key: readability-identifier-naming.GlobalConstantCase, value: lower_case }
  - { key: readability-identifier-naming.GlobalVariablePrefix, value: g_ }
  - {
      key: readability-identifier-nameing.ConstexprVariableCase,
      value: lower_case,
    }
  - { key: readability-identifier-nameing.ParameterCase, value: lower_case }
  - key: readability-identifier-naming.TemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase
  - key: readability-function-size.ParameterThreshold
    value: 4
  - key: readability-function-size.LineThreshold
    value: 40
  - key: readability-function-cognitive-complexity.IgnoreMacros
    value: true
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: true